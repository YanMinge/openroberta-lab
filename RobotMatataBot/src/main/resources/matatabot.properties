robot.plugin.factory = de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir = RobotMatataBot/

robot.plugin.fileExtension.source = json
robot.plugin.fileExtension.binary = json

# robot specific toolboxes, default program and configuration

robot.program.toolbox.beginner = /matatabot.program.toolbox.beginner.xml
robot.program.toolbox.expert = /matatabot.program.toolbox.expert.xml
robot.program.default = /matatabot.program.default.xml
robot.configuration.toolbox = /matatabot.configuration.toolbox.xml
robot.configuration.default = /matatabot.configuration.default.xml

robot.configuration = true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type = new

# robot's long name to display
robot.real.name = MatataBot
#robot.real.name = MatataBot&nbsp;<span class="typcn typcn-device-tablet"></span>
robot.vendor = na

# robot's info for further information
robot.info.en = https://matatalab.com/en
robot.info.de = https://matatalab.com/en

# simulation available?
robot.sim = false
robot.connection = webview

robot.descriptor = classpath:/matatabot.yml
robot.helperMethods = classpath:/common.methods.yml

robot.plugin.worker.validate = de.fhg.iais.roberta.worker.MatataBotBrickValidatorWorker
robot.plugin.worker.collect = de.fhg.iais.roberta.worker.MatataBotUsedHardwareCollectorWorker
robot.plugin.worker.generate=de.fhg.iais.roberta.worker.MatataBotCodeGeneratorWorker
robot.plugin.worker.transform.two2three=de.fhg.iais.roberta.worker.Two2ThreeTransformerWorker
robot.plugin.worker.transform.three2threeone=de.fhg.iais.roberta.worker.Three2ThreeOneTransformerWorker

robot.plugin.workflow.showsource = validate,collect,generate
robot.plugin.workflow.compile = validate,collect,generate
robot.plugin.workflow.run=validate,collect,generate
robot.plugin.workflow.transform=transform.two2three,transform.three2threeone
